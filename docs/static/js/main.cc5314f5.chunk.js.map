{"version":3,"sources":["styles/Style.js","components/InfoTabla.js","helpers/arreglosbidimiencionales.js","Redux/dataDuck.js","components/LiContent.js","components/LiTitle.js","components/Data.js","components/Form.js","components/NavBar.js","routers/AppRouter.js","Redux/store.js","App.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","light","dark","contrastText","secondary","third","useStyles","makeStyles","offset","mixins","toolbar","menuButton","marginRight","spacing","title","flexGrow","InfoTabla","funt","funcionArray","array","x","y","sol","length","i","tempArray","j","push","useSelector","state","data","map","rest","variantesArray","console","log","className","resp","key","types","initialState","LiContent","content","id","dispatch","useDispatch","useForm","register","handleSubmit","useState","bandera","setBandera","changeStatus","onSubmit","arrayEdit","variante1","variante2","variante3","variante4","variante5","filter","res","undefined","getState","Swal","fire","text","allowOutsideClick","onBeforeOpen","showLoading","setTimeout","type","payload","close","icon","error","ChangeState","va","onDoubleClick","ref","placeholder","defaultValue","name","LiTitle","categoriaArray","categoria","Data","store","Box","m","dat","Form","errors","campo","setCampo","variant","setVariant","numVariant","setNumVariant","Grid","container","item","xs","lg","md","xl","e","variante","filt","AddData","target","reset","p","align","alignItems","bgcolor","borderRadius","TextField","fullWidth","label","inputRef","required","value","message","minLength","mt","Button","color","endIcon","onClick","NavBar","history","useHistory","AppBar","Toolbar","Typography","AppRouter","exact","path","component","to","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","uuidv4","arrayData","ste","createStore","applyMiddleware","thunk","App","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc5314f5.chunk.js","sourcesContent":["import { createMuiTheme, makeStyles } from \"@material-ui/core\";\r\n\r\n\r\n\r\nexport const theme = createMuiTheme({\r\n\r\n    palette: {\r\n        primary: {\r\n            main: '#2a2a72',\r\n            light: '#009ffd',\r\n            dark: '#004e98',\r\n            contrastText: '#eaf6ff',\r\n\r\n        },\r\n        secondary: {\r\n            light: '#ffff3f',\r\n            main: '#d4d700',\r\n            dark: '#aacc00',\r\n            contrastText: '#000000',\r\n\r\n        },\r\n        third : {\r\n            dark: '#143601',\r\n            main: '#1a4301',\r\n            light: '#538d22',\r\n            contrastText: '#fff',\r\n\r\n        }\r\n\r\n    },\r\n\r\n});\r\n\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n\r\n    offset: theme.mixins.toolbar,\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 2,\r\n    },\r\n\r\n}));\r\n\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// Funcion \r\nimport { funcionArray } from '../helpers/arreglosbidimiencionales';\r\n\r\n\r\nexport const InfoTabla = () => {\r\n\r\n    const { data } = useSelector(state => state);\r\n\r\n\r\n\r\n    const dataChange = data.map(rest => {\r\n        return rest.variantesArray\r\n    })\r\n\r\n\r\n    const funt = funcionArray(dataChange, 0, 0, []);\r\n\r\n\r\n\r\n    console.log(funt)\r\n\r\n    return (\r\n        <div className=\"my-2 mx-5\">\r\n\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        {\r\n                            funt.map((resp, i) => {\r\n                                return <th key={resp + i}>Prueba {i+1}</th>\r\n                            })\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr >\r\n                        {funt.map((resp, i) => {\r\n                            return <td key={resp + i}>{resp}</td>\r\n                        })}\r\n\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const funcionArray = (array, x, y, sol) => {\r\n\r\n    if (array.length - 1 === x && array[array.length - 1].length - 1 === y) {\r\n\r\n        return sol\r\n    }\r\n\r\n    for (let i = x + 1; i < array.length; i++) {\r\n\r\n        let tempArray = [];\r\n\r\n        for (let j = 0; j < array[i].length; j++) {\r\n\r\n            // tempArray = [...tempArray, array[i][j] +  array[x][y]]\r\n\r\n            tempArray.push('-' + array[i][j] + ' - ' + array[x][y] )\r\n\r\n        }\r\n        sol.push(tempArray)\r\n    }\r\n\r\n    if (y < array[x].length - 1) {\r\n\r\n        return funcionArray(array, x, y + 1, sol)\r\n\r\n    } else {\r\n        return funcionArray(array, x + 1, 0, sol);\r\n    }\r\n\r\n}\r\n","import Swal from 'sweetalert2';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n//Types\r\nconst types = {\r\n    AddData: '[Data] Add Data',\r\n    EditData: '[Data] Edit Data',\r\n    ChangeState: '[Data] Change State'\r\n}\r\n\r\nconst initialState = []\r\n\r\n\r\n\r\n//Reducer\r\nexport const dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.AddData:\r\n\r\n            const id = uuidv4()\r\n            const data = {\r\n                ...action.payload,\r\n                id\r\n            }\r\n\r\n\r\n\r\n            return [...state, data];\r\n\r\n        case types.EditData:\r\n\r\n            return [...state]\r\n\r\n        case types.ChangeState:\r\n\r\n\r\n\r\n            const arrayData = [action.payload]\r\n            arrayData.map(rest => {\r\n                if (state) {\r\n                    state.map(ste => {\r\n                        if (rest.id === ste.id) {\r\n\r\n                            ste.variantesArray = rest.data\r\n                            return state\r\n\r\n                        }\r\n                        return state\r\n                    })\r\n\r\n                    return state;\r\n\r\n\r\n                }\r\n                rest = state;\r\n                return state;\r\n\r\n            })\r\n\r\n            return [\r\n                ...state\r\n            ]\r\n\r\n\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n//Acciones\r\n\r\n\r\nexport const AddData = (data) => {\r\n    return (dispatch, getState) => {\r\n\r\n\r\n        try {\r\n            dispatch({\r\n                type: types.AddData,\r\n                payload: data\r\n            })\r\n        } catch (error) {\r\n            console.log('error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const ChangeState = (data) => {\r\n\r\n\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        try {\r\n\r\n            Swal.fire({\r\n                title: 'Actualizando',\r\n                text: 'Espere Porfavor',\r\n                allowOutsideClick: false,\r\n                onBeforeOpen: () => {\r\n                    Swal.showLoading();\r\n                }\r\n            });\r\n            setTimeout(() => {\r\n\r\n\r\n                dispatch({\r\n                    type: types.ChangeState,\r\n                    payload: data\r\n                })\r\n                Swal.close();\r\n                Swal.fire({\r\n                    title: 'Variable Actualizada',\r\n                    icon: 'success'\r\n                })\r\n\r\n            }, 3000);\r\n\r\n           \r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ChangeState } from '../Redux/dataDuck';\r\n\r\n\r\nexport const LiContent = ({ content, id }) => {\r\n\r\n    // disparch\r\n    const dispatch = useDispatch();\r\n\r\n    //Hooks\r\n    const { register, handleSubmit } = useForm();\r\n\r\n\r\n\r\n    const { variantesArray } = content;\r\n\r\n\r\n\r\n    const [bandera, setBandera] = useState(true);\r\n\r\n    const changeStatus = () => {\r\n        setBandera(!bandera)\r\n    }\r\n\r\n\r\n\r\n    const onSubmit = (data) => {\r\n\r\n\r\n        const { variante1, variante2, variante3, variante4, variante5 } = data;\r\n\r\n        let arrayEdit = [variante1, variante2, variante3, variante4, variante5];\r\n\r\n        arrayEdit = arrayEdit.filter(res => {\r\n            return res !== undefined && res !== \"\"\r\n        })\r\n\r\n        data = { data: arrayEdit, id: id }\r\n\r\n        dispatch(ChangeState(data))\r\n        setTimeout(() => {\r\n            setBandera(!bandera)\r\n\r\n        }, 3000);\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                variantesArray.map((va, i) => {\r\n                    i = i + 1\r\n                    return (\r\n                        <li key={va + i} onDoubleClick={changeStatus} className=\"list-group-item text-center\">\r\n                            {\r\n                                bandera\r\n                                    ? va\r\n                                    : <form onSubmit={handleSubmit(onSubmit)}>\r\n                                        <input\r\n                                            ref={register}\r\n                                            placeholder={va}\r\n                                            defaultValue={va}\r\n                                            className=\"form-control\"\r\n                                            name={`variante${i}`}\r\n                                        />\r\n                                    </form>\r\n                            }\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const LiTitle = ({categoria}) => {\r\n\r\n\r\n     const {categoriaArray}= categoria;\r\n\r\n    return (\r\n        <>\r\n            <li className=\"list-group-item active text-center\">\r\n                {\r\n                    categoriaArray\r\n                }\r\n            </li>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Box } from '@material-ui/core';\r\nimport React, { Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { InfoTabla } from './InfoTabla';\r\nimport { LiContent } from './LiContent';\r\nimport { LiTitle } from './LiTitle';\r\n\r\nexport const Data = () => {\r\n\r\n\r\n    const { data } = useSelector(store => store);\r\n\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n\r\n\r\n            <Box m={5}>\r\n                {\r\n                    data.length === 0\r\n                        ? <h1 className=\"text-center\">Ingresa Algun  Valor en el formulario</h1>\r\n                        : <div className=\"container row\">\r\n                            {\r\n                                data.map(dat => {\r\n\r\n                                    return (\r\n                                        <ul className=\"list-group col-md-5 ml-1 mr-1 mt-3 mb-3\" key={dat.id}>\r\n\r\n                                            <LiTitle categoria={dat} />\r\n                                            <LiContent content={dat} id={dat.id} />\r\n                                        </ul>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                        </div>\r\n\r\n                }\r\n\r\n            </Box>\r\n            {\r\n                data.length > 1\r\n                    ? <InfoTabla />\r\n                    : <></>\r\n            }\r\n        </Fragment>\r\n\r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { Box, Button, Grid, TextField } from '@material-ui/core';\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Swal from 'sweetalert2';\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch } from 'react-redux';\r\nimport { AddData } from '../Redux/dataDuck';\r\n\r\n\r\nexport const Form = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, errors, handleSubmit } = useForm();\r\n\r\n    const [campo, setCampo] = useState([]);\r\n\r\n    const onSubmit = (data, e) => {\r\n\r\n        const { categoria, ...res } = data;\r\n        const { variante, variante2, variante3, variante4, variante5 } = res;\r\n        const categoriaArray = [categoria];\r\n        let variantesArray = [variante, variante2, variante3, variante4, variante5]\r\n\r\n        variantesArray = variantesArray.filter((filt => {\r\n            return filt !== undefined\r\n        }))\r\n\r\n        data = { categoriaArray, variantesArray };\r\n        setCampo([\r\n            ...campo,\r\n            data\r\n        ])\r\n        dispatch(AddData(data))\r\n        e.target.reset();\r\n        Swal.fire({\r\n            title: 'Guardado con exito',\r\n            icon: 'success',\r\n            text: 'Ya puedes consutar la info'\r\n        })\r\n\r\n        setVariant([])\r\n\r\n    }\r\n\r\n    const [variant, setVariant] = useState([]);\r\n\r\n    const [numVariant, setNumVariant] = useState(1);\r\n\r\n    const handleAddVariant = () => {\r\n\r\n        if (variant.length < 4) {\r\n            setNumVariant(numVariant + 1)\r\n            setVariant([...variant, numVariant + 1])\r\n        } else {\r\n            Swal.fire({\r\n                title: 'Se pueden agregar maximo 5 variables',\r\n                icon: 'error',\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Grid container>\r\n                    <Grid item xs={12} lg={12} md={12} xl={12}>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <Box\r\n                                m={5}\r\n                                p={5}\r\n                                align=\"center\"\r\n                                alignItems=\"center\"\r\n                                bgcolor=\"grey.200\"\r\n                                borderRadius={5}\r\n                            >\r\n                                <h1>Categoria</h1>\r\n                                <Grid\r\n                                    container\r\n                                >\r\n                                    <Grid\r\n                                        item\r\n                                        xs={12}\r\n                                        lg={12}\r\n                                        md={12}\r\n                                        xl={12}\r\n                                    >\r\n                                        <TextField\r\n                                            name=\"categoria\"\r\n                                            fullWidth\r\n                                            label=\"Categoria\"\r\n                                            variant=\"outlined\"\r\n                                            inputRef={\r\n                                                register({\r\n                                                    required: { value: true, message: 'Titulo Obligatorio' },\r\n                                                    minLength: {\r\n                                                        value: 2,\r\n                                                        message: 'El campo debe tener mas de dos valores'\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        />\r\n                                        <span className=\"text-danger text-small d-block mb-2\">\r\n                                            {errors.categoria && errors.categoria.message}\r\n                                        </span>\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <br />\r\n                                <h1>Variantes</h1>\r\n                                <Grid item\r\n                                    xs={12}\r\n                                    lg={12}\r\n                                    md={12}\r\n                                    xl={12}\r\n                                >\r\n                                    <TextField\r\n                                        name=\"variante\"\r\n                                        fullWidth\r\n                                        label={`Variante`}\r\n                                        variant=\"outlined\"\r\n                                        inputRef={register({\r\n                                            required: { value: true, message: 'El campo es requerido' },\r\n                                            minLength: { value: 2, message: 'El campo debe tener dos caracteres' }\r\n                                        })}\r\n                                    />\r\n                                    <span className=\"text-danger text-small d-block mb-2\">\r\n                                        {errors.variante && errors.variante.message}\r\n                                    </span>\r\n                                    <br />\r\n                                    <br />\r\n                                </Grid>\r\n\r\n                                {\r\n                                    variant.length !== 0\r\n                                        ?\r\n                                        variant.map((variante) => {\r\n                                            return (\r\n                                                <Grid key={variante} item\r\n                                                    xs={12}\r\n                                                    lg={12}\r\n                                                    md={12}\r\n                                                    xl={12}\r\n                                                >\r\n                                                    <TextField\r\n                                                        name={`variante${variante}`}\r\n                                                        fullWidth\r\n                                                        label={`Variante ${variante}`}\r\n                                                        variant=\"outlined\"\r\n                                                        inputRef={register({\r\n                                                            required: { value: true, message: `El campo es requerido ` },\r\n                                                            minLength: { value: 2, message: 'El campo debe tener dos caracteres' }\r\n                                                        })}\r\n                                                    />\r\n                                                    <span className=\"text-danger text-small d-block mb-2\">\r\n                                                        {errors.variante2 && errors.variante2.message}\r\n                                                    </span>\r\n                                                    <br />\r\n                                                    <br />\r\n                                                </Grid>\r\n                                            )\r\n                                        })\r\n                                        : <br />\r\n                                }\r\n                                <Grid container>\r\n                                    <Grid item xs={12} >\r\n                                        <Box mt={1} >\r\n                                            <Button\r\n                                                color=\"secondary\"\r\n                                                fullWidth\r\n                                                endIcon={<AddToPhotosIcon />}\r\n                                                variant=\"contained\"\r\n                                                onClick={handleAddVariant}\r\n                                            >\r\n                                                Agregar Variante\r\n                                        </Button>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} >\r\n                                        <Box mt={1}  >\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                fullWidth\r\n                                                variant=\"contained\"\r\n                                                endIcon={<SendIcon />}\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                Enviar\r\n                                        </Button>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { AppBar, Button, Toolbar, Typography } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nexport const NavBar = ({ title }) => {\r\n\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleData = () => {\r\n        history.push('./data')\r\n    }\r\n\r\n\r\n    const handleForm = () => {\r\n        history.push('./')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <AppBar >\r\n            <Toolbar>\r\n\r\n                <Typography variant=\"h6\" className={title}>\r\n                    Prueba Tecnica\r\n                    </Typography>\r\n                <Button onClick={handleData} color=\"inherit\">Datos</Button>\r\n                <Button onClick={handleForm} color=\"inherit\">Formulario</Button>\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { Data } from '../components/Data';\r\nimport { Form } from '../components/Form';\r\nimport { NavBar } from '../components/NavBar';\r\nimport { useStyles } from '../styles/Style';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const { offset, title } = useStyles();\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Router>\r\n                <div>\r\n                    <NavBar title={title} />\r\n                    <div className={offset}>\r\n                    </div>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Form} />\r\n\r\n                        <Route exact path=\"/data\" component={Data} />\r\n\r\n                        <Redirect to=\"/\" />\r\n\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { dataReducer } from './dataDuck';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    data: dataReducer,\r\n\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n\r\n        applyMiddleware(thunk)\r\n\r\n    )\r\n    );","import React from 'react';\r\n\r\n\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { theme } from './styles/Style';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './Redux/store';\r\n\r\n\r\n\r\nexport const App = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n                <ThemeProvider theme={theme}>\r\n\r\n                    <AppRouter />\r\n                  \r\n                </ThemeProvider>\r\n                </Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}